@misc{baderDomainGenerationAlgorithms2024,
  title = {Domain {{Generation Algorithms}}},
  author = {Bader, Johannes},
  year = {2024},
  month = mar,
  urldate = {2024-03-28},
  copyright = {GPL-2.0},
  howpublished = {\url{https://github.com/baderj/domain\_generation\_algorithms}},
  keywords = {dga,domain-generation-algorithm,malware,python,reverse-engineering}
}

@misc{BambenekFeed,
  title = {Bambenek {{Feed}}},
  publisher = {https://osint.bambenekconsulting.com/feeds/},
  address = {\url{https://osint.bambenekconsulting.com/feeds/}},
  urldate = {2024-05-11}
}

@phdthesis{beehTransformationsMarkovChains2017,
  type = {Bachelor {{Thesis}}},
  title = {Transformations between {{Markov Chains}} and {{Stochastic Regular Expressions}}},
  author = {Beeh, Tobias},
  year = {2017},
  month = feb,
  urldate = {2024-05-14},
  langid = {english},
  school = {University of Stuttgart},
  file = {C:\Users\erics\Zotero\storage\J6R4IZJP\Beeh - Transformations between Markov Chains and Stochast.pdf}
}

@misc{CiscoPopularityList,
  title = {Cisco {{Popularity List}}},
  publisher = {https://s3-us-west-1.amazonaws.com/umbrella-static/index.html},
  address = {\url{https://s3-us-west-1.amazonaws.com/umbrella-static/index.html}},
  urldate = {2024-04-01},
  abstract = {The popularity list contains our most queried domains based on passive DNS usage across our Umbrella global network of more than 100 Billion requests per day with 65 million unique active users, in more than 165 countries. Unlike Alexa, the metric is not based on only browser based 'http' requests from users but rather takes in to account the number of unique client IPs invoking this domain relative to the sum of all requests to all domains. In other words, our popularity ranking reflects the domain's relative internet activity agnostic to the invocation protocols and applications where as 'site ranking' models (such as Alexa) focus on the web activity over port 80 mainly from browsers. As for Alexa, the site's rank is based on combined measure of unique visitors (Alexa users who visit the site per day) and page views (total URL requests from Alexa users for a site). Umbrella popularity lists are generated on a daily basis reflecting the actual world-wide usage of domains by Umbrella global network users and includes root domains, subdomains in addition to TLDs (Alexa list has only this). In addition, Umbrella popularity algorithm also applies data normalization methodologies to smoothen potential biases that may occur in the data due to sampling of the DNS usage data.},
  file = {C:\Users\erics\Zotero\storage\B37RLQL7\index.html}
}

@misc{DGArchiveFraunhoferFKIE,
  title = {{{DGArchive}} - {{Fraunhofer FKIE}}},
  publisher = {https://dgarchive.caad.fkie.fraunhofer.de/},
  address = {\url{https://dgarchive.caad.fkie.fraunhofer.de/}},
  urldate = {2024-05-11},
  file = {C:\Users\erics\Zotero\storage\FBPTGI8M\dgarchive.caad.fkie.fraunhofer.de.html}
}

@article{dingDetectingDomainGeneration2019,
  title = {Detecting {{Domain Generation Algorithms}} with {{Bi-LSTM}}},
  author = {Ding, Liang and Li, Lunjie and Han, Jianghong and Fan, Yuqi and Hu, Donghui},
  year = {2019},
  journal = {Computers, Materials \& Continua},
  volume = {61},
  number = {3},
  pages = {1285--1304},
  publisher = {Tech Science Press},
  issn = {1546-2218, 1546-2226},
  doi = {10.32604/cmc.2019.06160},
  urldate = {2024-04-01},
  abstract = {Botnets often use domain generation algorithms (DGA) to connect to a command and control (C2) server, which enables the compromised hosts connect to the C2 server for accessing many domains. The detection of DGA domains is critical for blocking the C2 server, and for identifying the compromised hosts as well. However, the detection is difficult, because some DGA domain names look normal. Much of the previous work based on statistical analysis of machine learning relies on manual features and contextual information, which causes long response time and cannot be used for real-time detection. In addition, when a new family of DGA appears, the classifier has to be re-trained from the very beginning. This paper presents a deep learning approach based on bidirectional long short-term memory (Bi-LSTM) model for DGA domain detection. The classifier can extract features without the need for manual feature extraction, and the trainable model can effectively deal with new unknown DGA family members. In addition, the proposed model only needs the domain name without any additional context information. All domain names are preprocessed by bigram and the length of each processed domain name is set as a value longer than the most samples. Bidirectional LSTM model receives the encoded data and returns labels to check whether domain names are normal or not. Experiments show that our model outperforms state-of-the-art approaches and is able to detect new DGA families reliably.},
  langid = {english},
  file = {C:\Users\erics\Zotero\storage\VM955L4G\Ding et al. - 1970 - Detecting Domain Generation Algorithms with Bi-LST.pdf}
}

@inproceedings{drichelFalseSenseSecurity2023,
  title = {False {{Sense}} of {{Security}}: {{Leveraging XAI}} to {{Analyze}} the {{Reasoning}} and {{True Performance}} of {{Context-less DGA Classifiers}}},
  shorttitle = {False {{Sense}} of {{Security}}},
  booktitle = {Proceedings of the 26th {{International Symposium}} on {{Research}} in {{Attacks}}, {{Intrusions}} and {{Defenses}}},
  author = {Drichel, Arthur and Meyer, Ulrike},
  year = {2023},
  month = oct,
  eprint = {2307.04358},
  primaryclass = {cs},
  pages = {330--345},
  doi = {10.1145/3607199.3607231},
  urldate = {2024-03-27},
  abstract = {The problem of revealing botnet activity through Domain Generation Algorithm (DGA) detection seems to be solved, considering that available deep learning classifiers achieve accuracies of over 99.9\%. However, these classifiers provide a false sense of security as they are heavily biased and allow for trivial detection bypass. In this work, we leverage explainable artificial intelligence (XAI) methods to analyze the reasoning of deep learning classifiers and to systematically reveal such biases. We show that eliminating these biases from DGA classifiers considerably deteriorates their performance. Nevertheless we are able to design a context-aware detection system that is free of the identified biases and maintains the detection rate of state-of-the art deep learning classifiers. In this context, we propose a visual analysis system that helps to better understand a classifier's reasoning, thereby increasing trust in and transparency of detection methods and facilitating decision-making.},
  archiveprefix = {arxiv},
  langid = {english},
  keywords = {Computer Science - Cryptography and Security,Computer Science - Machine Learning},
  file = {C:\Users\erics\Zotero\storage\VX4NY3K5\Drichel and Meyer - 2023 - False Sense of Security Leveraging XAI to Analyze.pdf}
}

@incollection{dvornekJointlyDiscriminativeGenerative2019,
  title = {Jointly {{Discriminative}} and {{Generative Recurrent Neural Networks}} for {{Learning}} from {{fMRI}}},
  author = {Dvornek, Nicha C. and Li, Xiaoxiao and Zhuang, Juntang and Duncan, James S.},
  year = {2019},
  volume = {11861},
  eprint = {1910.06950},
  primaryclass = {cs, eess, q-bio, stat},
  pages = {382--390},
  doi = {10.1007/978-3-030-32692-0_44},
  urldate = {2024-04-24},
  abstract = {Recurrent neural networks (RNNs) were designed for dealing with time-series data and have recently been used for creating predictive models from functional magnetic resonance imaging (fMRI) data. However, gathering large fMRI datasets for learning is a difficult task. Furthermore, network interpretability is unclear. To address these issues, we utilize multitask learning and design a novel RNN-based model that learns to discriminate between classes while simultaneously learning to generate the fMRI time-series data. Employing the long short-term memory (LSTM) structure, we develop a discriminative model based on the hidden state and a generative model based on the cell state. The addition of the generative model constrains the network to learn functional communities represented by the LSTM nodes that are both consistent with the data generation as well as useful for the classification task. We apply our approach to the classification of subjects with autism vs. healthy controls using several datasets from the Autism Brain Imaging Data Exchange. Experiments show that our jointly discriminative and generative model improves classification learning while also producing robust and meaningful functional communities for better model understanding.},
  archiveprefix = {arxiv},
  keywords = {Computer Science - Machine Learning,Electrical Engineering and Systems Science - Image and Video Processing,Quantitative Biology - Neurons and Cognition,Statistics - Applications,Statistics - Machine Learning},
  file = {C\:\\Users\\erics\\Zotero\\storage\\TGBJPFS7\\Dvornek et al. - 2019 - Jointly Discriminative and Generative Recurrent Ne.pdf;C\:\\Users\\erics\\Zotero\\storage\\QRBJSDPW\\1910.html}
}

@incollection{jurafskyRNNsSequenceClassification2024,
  title = {9.3.2. {{RNNs}} for {{Sequence Classification}}},
  booktitle = {Speech and {{Language Processing}}},
  author = {Jurafsky, Dan and Martin, James H.},
  year = {2024},
  month = feb,
  edition = {3rd ed. draft},
  urldate = {2024-04-24},
  howpublished = {\url{https://web.stanford.edu/~jurafsky/slp3/9.pdf}},
  file = {C\:\\Users\\erics\\Zotero\\storage\\DT5KSWYD\\ed3bookfeb3_2024.pdf;C\:\\Users\\erics\\Zotero\\storage\\FRXI3IF6\\9.pdf;C\:\\Users\\erics\\Zotero\\storage\\5BJWB28V\\slp3.html}
}

@article{liuDetectionAlgorithmicallyGenerated2020,
  title = {Detection of {{Algorithmically Generated Domain Names Using}} the {{Recurrent Convolutional Neural Network}} with {{Spatial Pyramid Pooling}}},
  author = {Liu, Zhanghui and Zhang, Yudong and Chen, Yuzhong and Fan, Xinwen and Dong, Chen},
  year = {2020},
  month = sep,
  journal = {Entropy},
  volume = {22},
  number = {9},
  pages = {1058},
  publisher = {Multidisciplinary Digital Publishing Institute},
  issn = {1099-4300},
  doi = {10.3390/e22091058},
  urldate = {2024-04-01},
  abstract = {Domain generation algorithms (DGAs) use specific parameters as random seeds to generate a large number of random domain names to prevent malicious domain name detection. This greatly increases the difficulty of detecting and defending against botnets and malware. Traditional models for detecting algorithmically generated domain names generally rely on manually extracting statistical characteristics from the domain names or network traffic and then employing classifiers to distinguish the algorithmically generated domain names. These models always require labor intensive manual feature engineering. In contrast, most state-of-the-art models based on deep neural networks are sensitive to imbalance in the sample distribution and cannot fully exploit the discriminative class features in domain names or network traffic, leading to decreased detection accuracy. To address these issues, we employ the borderline synthetic minority over-sampling algorithm (SMOTE) to improve sample balance. We also propose a recurrent convolutional neural network with spatial pyramid pooling (RCNN-SPP) to extract discriminative and distinctive class features. The recurrent convolutional neural network combines a convolutional neural network (CNN) and a bi-directional long short-term memory network (Bi-LSTM) to extract both the semantic and contextual information from domain names. We then employ the spatial pyramid pooling strategy to refine the contextual representation by capturing multi-scale contextual information from domain names. The experimental results from different domain name datasets demonstrate that our model can achieve 92.36\% accuracy, an 89.55\% recall rate, a 90.46\% F1-score, and 95.39\% AUC in identifying DGA and legitimate domain names, and it can achieve 92.45\% accuracy rate, a 90.12\% recall rate, a 90.86\% F1-score, and 96.59\% AUC in multi-classification problems. It achieves significant improvement over existing models in terms of accuracy and robustness.},
  copyright = {http://creativecommons.org/licenses/by/3.0/},
  langid = {english},
  keywords = {algorithmically generated domain name,domain generation algorithm,recurrent convolutional neural network,SMOTE,spatial pyramid pooling},
  file = {C:\Users\erics\Zotero\storage\34LAL5ZU\Liu et al. - 2020 - Detection of Algorithmically Generated Domain Name.pdf}
}

@unpublished{manningNaturalLanguageProcessing2024,
  title = {Natural {{Language Processing}} with {{Deep Learning CS224N}}/{{Ling284}}},
  author = {Manning, Christopher},
  year = {2024},
  address = {Stanford},
  urldate = {2024-04-25},
  langid = {english},
  file = {C:\Users\erics\Zotero\storage\BTYPSVI2\Manning - Natural Language Processing with Deep Learning CS2.pdf}
}

@unpublished{neumannCISC3160Programming,
  type = {Lecture},
  title = {{{CISC}} 3160 {{Programming Languages}}: {{Converting Deterministic Finite Automata}} to {{Regular Expressions}}},
  author = {Neumann, Christoph},
  address = {Brooklyn College},
  abstract = {This paper explores three techniques for converting deterministic finite automata (DFA) to regular expressions and compares the usefulness of each technique. The techniques examined are the transitive closure method, the state removal method, and the Brzozowski algebraic method.},
  langid = {english},
  file = {C:\Users\erics\Zotero\storage\7XFZE2AX\ConvertDFSMtoRegExp.pdf}
}

@inproceedings{NIPS2015_250cf8b5,
  title = {Character-Level Convolutional Networks for Text Classification},
  booktitle = {Advances in Neural Information Processing Systems},
  author = {Zhang, Xiang and Zhao, Junbo and LeCun, Yann},
  editor = {Cortes, C. and Lawrence, N. and Lee, D. and Sugiyama, M. and Garnett, R.},
  year = {2015},
  volume = {28},
  publisher = {Curran Associates, Inc.},
  file = {C:\Users\erics\Zotero\storage\IUR52AQK\Zhang et al. - 2015 - Character-level convolutional networks for text cl.pdf}
}

@inproceedings{plohmannComprehensiveMeasurementStudy2016,
  title = {A {{Comprehensive Measurement Study}} of {{Domain Generating Malware}}},
  booktitle = {25th {{USENIX Security Symposium}} ({{USENIX Security}} 16)},
  author = {Plohmann, Daniel and Yakdan, Khaled and Klatt, Michael and Bader, Johannes and {Gerhards-Padilla}, Elmar},
  year = {2016},
  pages = {263--278},
  urldate = {2024-05-11},
  isbn = {978-1-931971-32-4},
  langid = {english},
  file = {C:\Users\erics\Zotero\storage\5SV78ECZ\Plohmann et al. - 2016 - A Comprehensive Measurement Study of Domain Genera.pdf}
}

@inproceedings{rayhanExperimentalAnalysisClassification2020a,
  title = {An {{Experimental Analysis}} of {{Classification Techniques}} for {{Domain Generating Algorithms}} ({{DGA}}) Based {{Malicious Domains Detection}}},
  booktitle = {2020 23rd {{International Conference}} on {{Computer}} and {{Information Technology}} ({{ICCIT}})},
  author = {Rayhan, Md Maruf and Ayub, Md. Ahsan},
  year = {2020},
  month = dec,
  pages = {1--5},
  publisher = {IEEE},
  address = {DHAKA, Bangladesh},
  doi = {10.1109/ICCIT51783.2020.9392701},
  urldate = {2024-04-01},
  abstract = {In modern days, there has been a significant surge of Domain Generating Algorithms (DGAs) based various types of cyber attacks executed by adversaries to facilitate covert server communication with the help of botnets. Such algorithms provide attackers a plethora of malicious domain names from which a subset of domain names are selected, and hence, common choices of defensive techniques, such as, blacklisting, reverse engineering, sinkholing, and preemptive registration of domains, become highly ineffective. In order to combat this dreadful situation, academia and industry based security researchers and network defenders in cyber realm have been utilizing machine learning based techniques to discover unseen malicious domain names. In our study, we present a unique experimental analysis of 13 state-of-the-art classification techniques to analyze the effectiveness of such classifiers on a large, diverse category of DGA produced malicious domain names' dataset having 80 different DGA families. We incorporate three text feature extraction methods, such as, unigram, bigram, and trigram, to explore the experimental findings to cover different aspects as well as report the performance results of each compiled machine learning model in terms of accuracy, precision score, recall score, and F1 score. We illustrate all the built models' performances in a tabular view for the readers to best compare one model with another in a variety of experimental settings we design.},
  copyright = {https://doi.org/10.15223/policy-029},
  isbn = {978-1-66542-244-4},
  langid = {english},
  file = {C:\Users\erics\Zotero\storage\PI6EDNSU\Rayhan and Ayub - 2020 - An Experimental Analysis of Classification Techniq.pdf}
}

@inproceedings{ruddTransformersEndtoEndInfoSec2022,
  title = {Transformers for {{End-to-End InfoSec Tasks}}: {{A Feasibility Study}}},
  shorttitle = {Transformers for {{End-to-End InfoSec Tasks}}},
  booktitle = {Proceedings of the 1st {{Workshop}} on {{Robust Malware Analysis}}},
  author = {Rudd, Ethan M. and Rahman, Mohammad Saidur and Tully, Philip},
  year = {2022},
  month = may,
  eprint = {2212.02666},
  primaryclass = {cs},
  pages = {21--31},
  doi = {10.1145/3494110.3528242},
  urldate = {2024-03-30},
  abstract = {In this paper, we assess the viability of transformer models in end-to-end InfoSec settings, in which no intermediate feature representations or processing steps occur outside the model. We implement transformer models for two distinct InfoSec data formats - specifically URLs and PE files - in a novel end-to-end approach, and explore a variety of architectural designs, training regimes, and experimental settings to determine the ingredients necessary for performant detection models. We show that in contrast to conventional transformers trained on more standard NLP-related tasks, our URL transformer model requires a different training approach to reach high performance levels. Specifically, we show that 1) pre-training on a massive corpus of unlabeled URL data for an auto-regressive task does not readily transfer to binary classification of malicious or benign URLs, but 2) that using an auxiliary auto-regressive loss improves performance when training from scratch. We introduce a method for mixed objective optimization, which dynamically balances contributions from both loss terms so that neither one of them dominates. We show that this method yields quantitative evaluation metrics comparable to that of several top-performing benchmark classifiers. Unlike URLs, binary executables contain longer and more distributed sequences of information-rich bytes. To accommodate such lengthy byte sequences, we introduce additional context length into the transformer by providing its self-attention layers with an adaptive span similar to Sukhbaatar et al. We demonstrate that this approach performs comparably to well-established malware detection models on benchmark PE file datasets, but also point out the need for further exploration into model improvements in scalability and compute efficiency.},
  archiveprefix = {arxiv},
  keywords = {Computer Science - Artificial Intelligence,Computer Science - Cryptography and Security,Computer Science - Machine Learning},
  file = {C\:\\Users\\erics\\Zotero\\storage\\AATQMH77\\Rudd et al. - 2022 - Transformers for End-to-End InfoSec Tasks A Feasi.pdf;C\:\\Users\\erics\\Zotero\\storage\\XYS9EPQ3\\2212.html}
}

@inproceedings{yuCharacterLevelBased2018,
  title = {Character {{Level}} Based {{Detection}} of {{DGA Domain Names}}},
  booktitle = {2018 {{International Joint Conference}} on {{Neural Networks}} ({{IJCNN}})},
  author = {Yu, Bin and Pan, Jie and Hu, Jiaming and Nascimento, Anderson and De Cock, Martine},
  year = {2018},
  month = jul,
  pages = {1--8},
  issn = {2161-4407},
  doi = {10.1109/IJCNN.2018.8489147},
  urldate = {2024-03-30},
  abstract = {Recently several different deep learning architectures have been proposed that take a string of characters as the raw input signal and automatically derive features for text classification. Few studies are available that compare the effectiveness of these approaches for character based text classification with each other. In this paper we perform such an empirical comparison for the important cybersecurity problem of DGA detection: classifying domain names as either benign vs. produced by malware (i.e., by a Domain Generation Algorithm). Training and evaluating on a dataset with 2M domain names shows that there is surprisingly little difference between various convolutional neural network (CNN) and recurrent neural network (RNN) based architectures in terms of accuracy, prompting a preference for the simpler architectures, since they are faster to train and to score, and less prone to overfitting.},
  keywords = {Computer architecture,cybersecurity,deep learning,domain generation algorithm,Feature extraction,Machine learning,malware,Malware,Recurrent neural networks,text classification,Training},
  file = {C\:\\Users\\erics\\Zotero\\storage\\8AZZFS6N\\Yu et al. - 2018 - Character Level based Detection of DGA Domain Name.pdf;C\:\\Users\\erics\\Zotero\\storage\\T5NNDUBB\\8489147.html}
}

@inproceedings{yuInlineDGADetection2017,
  title = {Inline {{DGA Detection}} with {{Deep Networks}}},
  booktitle = {2017 {{IEEE International Conference}} on {{Data Mining Workshops}} ({{ICDMW}})},
  author = {Yu, Bin and Gray, Daniel L. and Pan, Jie and Cock, Martine De and Nascimento, Anderson C. A.},
  year = {2017},
  month = nov,
  pages = {683--692},
  publisher = {IEEE},
  address = {New Orleans, LA},
  doi = {10.1109/ICDMW.2017.96},
  urldate = {2024-04-21},
  abstract = {Domain generation algorithms (DGAs) automatically generate large numbers of domain names in DNS domain fluxing for the purpose of command-and-control (C\&C) communication. DGAs are immune to static prevention methods like blacklisting and sinkholing. Detection of DGAs in a live stream of queries in a DNS server is referred to as inline detection. Most of the previous approaches in the literature on DGA detection either: (i) are based on small synthetic data sets for training, rather than data collected from real traffic or (ii) require contextual information and therefore cannot be used for inline detection. In this work, we overcome these limitations by proposing a novel way to label a large volume of data collected from real traffic as DGA/non-DGA and by using deep learning techniques. Our classifiers can be trained with large amounts of real traffic, rather than small synthetic data sets, and therefore have better performance.},
  isbn = {978-1-5386-3800-2},
  langid = {english},
  file = {C:\Users\erics\Zotero\storage\B4YAF5AJ\Yu et al. - 2017 - Inline DGA Detection with Deep Networks.pdf}
}

@inproceedings{zhangDetectionAlgorithmicallyGenerated2019,
  title = {Detection of {{Algorithmically Generated Domain Names Using SMOTE}} and {{Hybrid Neural Network}}},
  booktitle = {Computer {{Supported Cooperative Work}} and {{Social Computing}}},
  author = {Zhang, Yudong and Chen, Yuzhong and Lin, Yangyang and Zhang, Yankun},
  editor = {Sun, Yuqing and Lu, Tun and Yu, Zhengtao and Fan, Hongfei and Gao, Liping},
  year = {2019},
  pages = {738--751},
  publisher = {Springer},
  address = {Singapore},
  doi = {10.1007/978-981-15-1377-0_57},
  abstract = {Domain generation algorithms (DGA) provide methods that use specific parameters as random seeds to generate a large number of random domain names for preventing malicious domain name detection, which greatly increases the difficulty of detecting and defending botnets and malware. State-of-the-art models for detecting algorithmically generated domain names are generally based on the principle of analyzing the statistical characteristics of the domain name and building a classifier to locate the algorithmically generated ones. However, most current models have problems of requiring the manual construction of feature sets for classification, as they are sensitive to the imbalance of the sample distribution in the domain name dataset and are difficult to adapt to frequent changes of the domain-name algorithm. To address this issue, we propose a hybrid model that combines a convolutional neural network (CNN) and a bidirectional long-term memory network (BLSTM). First, to solve the problem of the number of domain names generated by DGAs being relatively small and the sample distribution being unbalanced, which consequently decreases detection accuracy, the borderline synthetic minority over-sampling technique is employed to optimize the sample balance of the domain name dataset. Second, a hybrid deep neural network that combines CNN and BLSTM is introduced to extract the semantic and context-dependency features from the domain names. The experimental results from different domain-name datasets demonstrate that the proposed model achieves significant improvement over state-of-the-art models with regard to precision and robustness.},
  isbn = {9789811513770},
  langid = {english},
  keywords = {CNN,Domain name generation,LSTM,Malicious domain name detection,SMOTE}
}

@inproceedings{zhouCNNbasedDGADetection2019,
  title = {{{CNN-based DGA Detection}} with {{High Coverage}}},
  booktitle = {2019 {{IEEE International Conference}} on {{Intelligence}} and {{Security Informatics}} ({{ISI}})},
  author = {Zhou, Shaofang and Lin, Lanfen and Yuan, Junkun and Wang, Feng and Ling, Zhaoting and Cui, Jia},
  year = {2019},
  month = jul,
  pages = {62--67},
  publisher = {IEEE},
  address = {Shenzhen, China},
  doi = {10.1109/ISI.2019.8823200},
  urldate = {2024-04-21},
  abstract = {Attackers often use domain generation algorithms (DGAs) to create various kinds of pseudorandom domains dynamically and select a part of them to connect with command and control servers, therefore it is important to automatically detect the algorithmically generated domains (AGDs). AGDs can be broken down into two categories: character-based domains and wordlist-based domains. Recently, methods based on machine learning and deep learning have been widely explored. However, much of the previous work perform well in detecting one kind of DGA families but poorly in classifying another kind. A general detection system which is applicable to both kinds of domains still remains a challenge. To address this problem, we propose a novel real-time detection method with high accuracy as well as high coverage. We first convey a domain name into a sequence of word-level or character-level components, then design a deep neural network based on temporal convolutional network to extract the implicit pattern and classify the domain into two or more categories. Our experimental results demonstrate that our model outperforms state-of-the-art approaches in both binary classification and multi-class classification, and shows a good performance in detecting different kinds of DGAs. Besides, the high training efficiency of our model makes it adjust to new malicious domains quickly.},
  copyright = {https://ieeexplore.ieee.org/Xplorehelp/downloads/license-information/IEEE.html},
  isbn = {978-1-72812-504-6},
  langid = {english},
  file = {C:\Users\erics\Zotero\storage\AMCWI8BL\Zhou et al. - 2019 - CNN-based DGA Detection with High Coverage.pdf}
}
